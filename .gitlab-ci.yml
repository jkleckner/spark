stages:
- build

variables:
  GIT_DEPTH: 0

build:
  stage: build
  image: maven:3-jdk-8
  services:
    - docker:dind
  cache:
    key: build-cache
    paths:
      - .m2/
  before_script:
    # See: https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-debian-9
    # - mkdir $PWD/.m2 ; ln -s $PWD/.m2 $USER/.m2
    - cat /etc/hosts
    - apt update
    - apt-get --yes --quiet â€“-no-install-recommends install apt-transport-https ca-certificates curl gnupg2 software-properties-common python3-pip
    - curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    - apt update
    - apt-cache policy docker-ce-cli
    - apt-get install --yes --quiet docker-ce-cli
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  variables:
    DOCKER_HOST: tcp://docker:2375
  script:
    - >
      set -x;
      tagStamp=$(git describe --tags --always --dirty);
      time ( dev/make-distribution.sh --tgz --pip -Phadoop-2.7 -Pkubernetes );
      time ( cd ./dist ; bin/docker-image-tool.sh -r ${CI_REGISTRY_IMAGE} -t "$tagStamp" build);
      time ( cd ./dist ; bin/docker-image-tool.sh -r ${CI_REGISTRY_IMAGE} -t "$tagStamp" push);
      docker images;
      pwd ;
      ls -la / /root /root/.m2 .  ;
